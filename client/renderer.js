// 1. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
console.log("üîÑ –í–∏–∫–ª–∏–∫–∞–Ω–æ dispatchGetCategories()");
window.electronAPI.dispatch({
    type: "category/getCategories/pending",
    payload: null,
});

// 2. –ü—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è store, —Ä–µ–Ω–¥–µ—Ä–∏–º–æ
window.electronAPI.onReduxUpdate((state) => {
    const categories = state.category?.items ?? [];
    console.log("üì• –ù–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑—ñ store:", state);
    renderCategories(categories);
});

// 3. –†–µ–Ω–¥–µ—Ä —Ñ—É–Ω–∫—Ü—ñ—è
function renderCategories(categories) {
    const container = document.getElementById("category-list");
    container.innerHTML = "";

    if (!categories.length) {
        container.innerHTML = "<p>No categories found.</p>";
        return;
    }

    console.log("üñºÔ∏è –†–µ–Ω–¥–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:", categories);

    categories.forEach((cat) => {
        const div = document.createElement("div");
        div.classList.add("category-item");
        div.innerHTML = `
            <h3>${cat.name}</h3>
            <ul>
                ${(cat.items || [])
                    .map((item) => `<li>${item.name} ‚Äî $${item.amount}</li>`)
                    .join("")}
            </ul>
        `;
        container.appendChild(div);
    });
}
